/*
 * STX String Functions
 * Copyright (C) 2014 Timo Bingmann <tb@panthema.net>
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef CHECK_HEADER
#define CHECK_HEADER

#include <iostream>

//! Check that [condition] is true, abort otherwise.
#define CHECK(condition)                                                \
    do {                                                                \
        if (condition) break;                                           \
        std::cerr << "CHECK " << #condition                             \
            << " - FAILED @ " __FILE__ ":" << __LINE__                  \
            << std::endl;                                               \
        abort();                                                        \
    } while (0)

//! Define to check that [code] throws and exception of given type
#define CHECK_THROW(code, exception_type)                               \
    do {                                                                \
        bool test__ = false;                                            \
        try { code; }                                                   \
        catch (const exception_type&) { test__ = true; }                \
        if (test__) break;                                              \
        std::cerr << "CHECK-THROW" << #code                             \
            << " - NO EXCEPTION " #exception_type                       \
            << " @ " __FILE__ ":" << __LINE__                           \
            << std::endl;                                               \
        abort();                                                        \
    } while (0)

//! Returns an initialized unsigned char[] array inside an std::string
#define ARRAY_AS_STRING(array) \
    std::string(reinterpret_cast<const char*>(array), sizeof(array))

#endif // CHECK_HEADER
